package vending_machine;

import hu.elte.txtuml.api.stdlib.timers.Timer;

class CashRegister {

	int insertedCash;

	Timer timerHandle;

	public CashRegister() {
		insertedCash = 0;
	}

	public int howMuchIsInside() {
		return insertedCash;
	}

	// state machine states
	initial Init;

	state Taking;

	state Returning {
		entry {
			CashRegister.this->(WorkTogether.theMachine).selectAny().updateMessage("Returning: " + trigger.howMany);
			insertedCash = 0;
			timerHandle = Timer.start(this, new done(), 1000);
		}
	}

	// state machine transitions
	transition Initialize {
		from Init;
		to Taking;
	}

	transition StopTaking {
		from Taking;
		to Returning;
		trigger giveBackCash;
	}

	transition StopReturning {
		from Returning;
		to Taking;
		trigger done;
		effect {
			CashRegister.this->(WorkTogether.theMachine).selectAny().updateMessage("Online");
			timerHandle.cancel();
		}
	}

	transition TakeCash {
		from Taking;
		to Taking;
		trigger insertCash;
		effect {
			insertedCash += trigger.coin;
			CashRegister.this->(WorkTogether.theMachine).selectAny().updateMessage("Inserted: " + insertedCash);
		}
	}

}

