package nuclearpower.model;

import nuclearpower.model.assocination.PlantPanelAssociation;
import nuclearpower.model.assocination.PlantUIAssociation;

class NuclearPowerPlant {
	
	private boolean isInOperation;
	public boolean isInOperation(){
		return isInOperation;
	} 
	
	initial Init;
	state NotInOperation{
		entry{
			this->(PlantUIAssociation.ui).selectAny().gui.powerStationStateChanged("Shut down");
			isInOperation = false;	
		}
	};
	composite ProducePower {
		initial Init;
		state ProduceMuchPower{
			entry{
				this->(PlantUIAssociation.ui).selectAny().gui.powerStationStateChanged("Full power");
			}
		};
		state ProduceFewPower{
			entry{
				this->(PlantUIAssociation.ui).selectAny().gui.powerStationStateChanged("Normal power");
			}
		};
		
		transition Initialize {
			from Init;
			to ProduceMuchPower;
		}
		
		transition FewPowerProducing {
			from ProduceMuchPower;
			to ProduceFewPower;
			trigger ReduceProductionVolume;
		}
		
		transition MorePowerProducing {
			from ProduceFewPower;
			to ProduceMuchPower;
			trigger IncraseProductionVolume;
		}
		
		entry{
			isInOperation = true;
		}
	}
		
	
	transition Initialize {
		from Init;
		to NotInOperation;
	}
	
	transition ShutingDown {
		from ProducePower;
		to NotInOperation;
		trigger SwitchOffPlant;
	}
	
	transition TurnOnPlant {
		from NotInOperation;
		to ProducePower;
		trigger SwitchOnPlant;
	}
}